$maxWidth:1920px;//ширина экрана
$maxWidthContainer: 1170px;//ширина контейнера
@mixin adaptive-value($property, $starSize, $minSize, $type) {
   $addSize: $starSize - $minSize;
   @if $type==1 {
      //только если меньше контейнера
      #{$property}:$starSize + px;
      @media (max-width: #{$maxWidthContainer + px}){
         #{$property}: calc(#{$minSize + px} + #{$addSize}*((100vw - 320px) / #{$maxWidthContainer - 320px}));
      }
      
   }@else if $type==2 {
      //только если больше контейнера
      #{$property}:$starSize + px;
      @media (min-width: #{$maxWidthContainer + px}){
         #{$property}: calc(#{$minSize + px} + #{$addSize}*((100vw - 320px) / #{$maxWidth - 320px}));
      }
   }
      @else {
         //всегда
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320px}));
         }
      
   }
   
   /*
   //отзывчевый адаптив

вызов миксина
@include adaptive-value("padding", 50, 20 ,0);//параметры и свойство миксина 50- начальное макетное св-во 20 - миним начение 0- режим 1 и 3 

//calc(10px + (30 - 20)*((100vw - 320px) / (1200 - 320)));
//эта формула и есть отзывчевый адаптив 1200 ширина экрана по макету 320 минимальная ширина экрана
//10 30 20 размеры отступов в px
*/